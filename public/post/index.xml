<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Arjun Jayaprakash</title>
    <link>/post/</link>
    <description>Recent content in Posts on Arjun Jayaprakash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Teaching Statement</title>
      <link>/post/2019/09/30/teaching-statement/</link>
      <pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/09/30/teaching-statement/</guid>
      <description>My teaching interests and philosophy have been heavily influenced by the faculty members I have worked with or have attended lectures of, throughout my time at North Carolina State University (NCSU). Along the way, I have picked up effective teaching techniques from each one of them which has prepared me to develop a style of my own. I am an instructor for the course CE 214: Engineering Mechanics-Statics at NCSU.</description>
    </item>
    
    <item>
      <title>Machine Learning 1</title>
      <link>/post/2019/06/29/machine-learning-1/</link>
      <pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/06/29/machine-learning-1/</guid>
      <description> Pre-notes  Three types  Classification Regression Clustering  Classification  Predict category of new observation Qualitative output into predefined classes  Regression  Estimate a regression function that can predict a response value from a bunch of predictors Quantitative response Previous input to output observations should be known  Clustering  Classification but into similar clusters The clusters themselves have to be dissimilar    </description>
    </item>
    
    <item>
      <title>Python 2</title>
      <link>/post/2019/06/29/python-2/</link>
      <pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/06/29/python-2/</guid>
      <description>Operators and Statements Pre-Notes  Arithmetic Operators  Unary Binary  Logical Operators  and, or, not  Relational Operators  &amp;gt;, &amp;lt;, ==, != etc.  Membership Operators  in, not in Check if some value is there or not in a sequence. The sequence can be a string and you can check if certain characters are there in that string.  Statements  Conditional Statements if, else, elif Syntax   if expression : # Notice the required &amp;quot;:&amp;quot; statements # Notice the required tab before any following statement elif expression : statements else : statements  Loops  For loop while loop  While loop  while expression : statements statement_outside_loop   For loop  Used for two instances:  When you want to go over item of any sequence, list or strings.</description>
    </item>
    
    <item>
      <title>Python 1</title>
      <link>/post/2019/06/25/python-1/</link>
      <pubDate>Tue, 25 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/06/25/python-1/</guid>
      <description>Data Types Here is how a simple code looks like. Saving variables as int (integers) or float (floating points) are shown.
 Exponentiation: ** This operator raises the number to its left to the power of the number to its right.
 Modulo: %. This operator returns the remainder of the division of the number to the left by the number on its right.
  # Create a variable savings savings = 100 # Create a variable growth_multiplier growth_multiplier = 1.</description>
    </item>
    
    <item>
      <title>Teaching Statement</title>
      <link>/post/2019/04/08/teaching-statement/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/04/08/teaching-statement/</guid>
      <description>My approach to teaching an undergraduate level course is different from my plan to teach a graduate level course. My experience from observing and teaching the statics course, as well as having been an undergraduate student, has lead me to believe that a majority of the students find it hard to make the transition from high school to college level. Hence, my philosophy for teaching fundamental courses like statics, mechanics of solids, reinforced concrete etc.</description>
    </item>
    
    <item>
      <title>Elimination method</title>
      <link>/post/2019/03/14/elimination-method/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/03/14/elimination-method/</guid>
      <description>Basic concept It is all about solving a system of simultaneous linear equations, referring back to high school maths. Say we have,
\[ x + 2y + z = 2\] \[ 3x + 8y + z = 12\] \[ 4y + z = 2\]
we can convert this set of equations into a single equation through matrices. Just compile all the coefficients onto a matrix \(\textbf{A}\) and the variables into an unknown vector \(\textbf{x}\).</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>/post/2019/03/14/intro/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019/03/14/intro/</guid>
      <description>About the series I have been watching MIT Open Courseware lectures on Linear Algebra by Dr. Gilbert Strang to refresh my memory of the concepts. I had watched this series a couple of years ago while I was taking the Advanced Finite Element course at my university. At that time, I thought I had a good grasp of the concepts. However, two years of non-usage has left me completely ignorant of the core concepts of matrix operations.</description>
    </item>
    
    <item>
      <title>Learning Python - Py series</title>
      <link>/post/1/01/01/learning-python-py-series/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/post/1/01/01/learning-python-py-series/</guid>
      <description>About the series So, I decided to give Python a try. This blog series is just me jotting down whatever I learn in Python. This isn’t a tutorial since I am a beginner myself. However, this may serve as a good resource for beginners like me.
 Chapters  Python 1: First Lessons Python 2: Control Statements  Sources Please note that the example code chunks I am using here weren’t developed by myself.</description>
    </item>
    
  </channel>
</rss>